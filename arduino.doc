#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>

// Configurações de rede
const char* ssid = "EDUARDO";
const char* password = "eduardods";
const char* serverPHP = "http://192.168.137.141/Arduino/salvar_tensao.php";

unsigned long lastSend = 0;
const unsigned long SEND_INTERVAL = 5000; // 5s

void printNetworkInfo() {
  Serial.println("=== Rede ===");
  Serial.print("SSID: "); Serial.println(WiFi.SSID());
  Serial.print("IP do ESP: "); Serial.println(WiFi.localIP());
  Serial.print("Gateway: "); Serial.println(WiFi.gatewayIP());
  Serial.print("Mascara: "); Serial.println(WiFi.subnetMask());
  Serial.println("============");
}

void reconnectWiFi() {
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("WiFi desconectado. Tentando reconectar...");
    WiFi.disconnect();
    WiFi.begin(ssid, password);

    unsigned long t0 = millis();
    while (WiFi.status() != WL_CONNECTED && millis() - t0 < 10000) {
      delay(500);
      Serial.print(".");
    }
    Serial.println();

    if (WiFi.status() == WL_CONNECTED) {
      Serial.println("Reconectado ao WiFi!");
      printNetworkInfo();
    } else {
      Serial.println("Falha ao reconectar WiFi.");
    }
  }
}

void setup() {
  Serial.begin(115200);
  delay(100);
  Serial.println();
  Serial.println("Iniciando...");

  WiFi.begin(ssid, password);
  Serial.print("Conectando ao WiFi");
  unsigned long t0 = millis();
  while (WiFi.status() != WL_CONNECTED && millis() - t0 < 15000) {
    delay(300);
    Serial.print(".");
  }
  Serial.println();

  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("WiFi conectado!");
  } else {
    Serial.println("Falha ao conectar WiFi (timeout).");
  }

  printNetworkInfo();
}

void loop() {
  reconnectWiFi();

  // mostra rede a cada 30s
  static unsigned long lastNetPrint = 0;
  if (millis() - lastNetPrint > 30000) {
    lastNetPrint = millis();
    printNetworkInfo();
  }

  // Envia dados ao PHP periodicamente
  if (millis() - lastSend >= SEND_INTERVAL) {
    lastSend = millis();

    if (WiFi.status() == WL_CONNECTED) {
      // Lê tensão do pino A0
      int rawValue = analogRead(A0);
      float tensao = (rawValue / 1023.0) * 3.3; // ajusta para 0-3.3V

      String url = String(serverPHP) + "?valor=" + String(tensao, 2);
      Serial.println("Enviando para: " + url);

      WiFiClient client;
      HTTPClient http;
      if (http.begin(client, url)) {
        int code = http.GET();
        Serial.print("Código HTTP: ");
        Serial.println(code);
        if (code > 0) {
          String payload = http.getString();
          Serial.print("Resposta: ");
          Serial.println(payload);
        } else {
          Serial.print("Erro HTTP: ");
          Serial.println(http.errorToString(code));
        }
        http.end();
      } else {
        Serial.println("Falha ao iniciar conexão HTTP.");
      }
    } else {
      Serial.println("WiFi desconectado - pulando envio");
    }
  }
}
